apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'

def keyStorePropertiesFile = rootProject.file("keystore.properties")
def keyStoreProperties = new Properties()

keyStoreProperties.load(new FileInputStream(keyStorePropertiesFile))

android {
    buildFeatures {
        viewBinding true
        compose true
    }

    signingConfigs {
        config {
            keyAlias keyStoreProperties['KEY_ALIAS']
            keyPassword keyStoreProperties['KEY_PASSWORD']
            storeFile file(keyStoreProperties['STORE_FILE'])
            storePassword keyStoreProperties['KEYSTORE_PASSWORD']
        }
    }
    compileSdkVersion 31
    defaultConfig {
        applicationId "jermaine.shotclockapp"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 5
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion = compose_version
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"

    implementation platform('com.google.firebase:firebase-bom:26.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    // Jetpack Compose
    implementation "androidx.compose.compiler:compiler:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.navigation:navigation-compose:2.5.0-alpha03"
    implementation "com.google.accompanist:accompanist-pager:0.24.3-alpha"
    implementation "androidx.activity:activity-compose:1.5.0-alpha03"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.23.1"

    // Test rules and transitive dependencies:
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=com.google.accompanist.pager.ExperimentalPagerApi"
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.FlowPreview"
        freeCompilerArgs += "-opt-in=kotlin.time.ExperimentalTime"
    }
}